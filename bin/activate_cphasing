#!/bin/bash

# This script activates the cphasing environment by pixi 

if [ -f $HOME/.pixi/bin/pixi ]; then
    export PATH=$HOME/.pixi/bin:$PATH
fi

if ! command -v pixi &> /dev/null
then
    echo "pixi could not be found, installing pixi..."
    curl -fsSL https://pixi.sh/install.sh | bash
    export PATH=$HOME/.pixi/bin:$PATH

    if ! command -v pixi &> /dev/null
    then
        if command -v cargo &> /dev/null
        then
            echo "Installing pixi using cargo..."
            cargo install --locked --git https://github.com/prefix-dev/pixi.git
            export PATH=$HOME/.cargo/bin:$PATH
        else
            curl -sSf https://static.rust-lang.org/rustup.sh | sh
            export PATH=$HOME/.cargo/bin:$PATH
            if ! command -v cargo &> /dev/null
            then
                echo "Failed to install pixi, please install pixi manually."
                exit 1
            else
                echo "Installing pixi using cargo..."
                cargo install --locked --git https://github.com/prefix-dev/pixi.git
           fi
        fi
    fi
fi

script_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
software_dir="$(dirname "$script_dir")"


if [ ! -f $software_dir/pixi.toml ]; then
    echo "pixi.toml not found in $software_dir"
    exit 1
fi

if [ ! -d $software_dir/.pixi/envs/default/bin/ ]; then
    echo "Installing cphasing environment..."
    pixi install --manifest-path $software_dir/pixi.toml
fi

export LD_LIBRARY_PATH="$software_dir/.pixi/envs/default/lib:$LD_LIBRARY_PATH"
export PATH=$software_dir/bin:$PATH
export PYTHONPATH=$software_dir:$PYTHONPATH
unset PERL5LIB

is_tty=$(tty)   

if [ "$is_tty" == "not a tty" ]; then
    export PS1="(CPhasing) $PS1"
    pixi shell-hook --manifest-path $software_dir/pixi.toml --no-install > $software_dir/.pixi/envs/default/.env
    . $software_dir/.pixi/envs/default/.env
else 
    # export PS1="(CPhasing) $PS1"
    # pixi shell-hook --manifest-path $software_dir/pixi.toml --no-install > $software_dir/.pixi/envs/default/.env
    # . $software_dir/.pixi/envs/default/.env
    pixi shell --manifest-path $software_dir/pixi.toml --no-install
fi

